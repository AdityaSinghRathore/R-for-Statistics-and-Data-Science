checkprime <- function(a){
flagprime<-T
end <- a/2
for (i in 2:end){
print("checking..")
if(a%%i==0){
flagprime<-F
break
}
}
return(flagprime)
}
checkprime(3)
hello<-function(a){
print(paste("Hello ",a))
}
hello("ddd")
chisq.test()
mat<-matrix(1:25, byrow = T, nrow = 5)
matrix(1:25, byrow = T, nrow = 5)
hello<-function(a){
#print(paste("Hello ",a))
return("Hello ",a)
}
hello("ddd")
hello<-function(a){
#print(paste("Hello ",a))
c<-paste("Hello ",a)
return(c)
}
hello("ddd")
hello<-function(a){
#print(paste("Hello ",a))
c<-paste("Hello ",a)
return(c)
}
a<-hello("ddd")
a
shipaluminium<-function(kgs){
# big bars
bb<-kgs%%5
sb<-kgs-bb*5
bars <- c(bb,sb)
names(bars)<-c('Big','Small')
return(bars)
}
shipaluminium(26)
shipaluminium<-function(kgs){
# big bars
bb<-kgs%/%5
sb<-kgs-bb*5
bars <- c(bb,sb)
names(bars)<-c('Big','Small')
return(bars)
}
shipaluminium(26)
a<-hello("ddd")
greet<-function(name)
{print("hello",name)
}
greet(ram)
greet<-function(name)
{
c<-paste("Hello ",name)
print(c)
}
greet("ram")
mul<-function(a,b){
return(a*b)
}
mul(4,9)
mul<-function(a,b){
return(a*b)
}
z<-mul(4,9)
a==b
a<-3
b<-c(1,2,3,3,3,3)
a==b
hepl(any)
hepl("any")
help("any")
any(a==b)
mul1(2,c(2,4,5,6,1))
mul1<-function(a,b){
z<-any(a==b)
return(z)
}
mul1(2,c(2,4,5,6,1))
checkcontains <- function(a,b = vector()){
return(any(a==b))
}
checkcontains(4,4)
a<-3
b<-c(1,2,3,3,3,5)
checkcontains <- function(a,b = vector()){
return(any(a==b))
}
checkcontains(a,b)
help("count")
help(count)
b<-c(1,2,3,3,3,3)
table(b)
t<-table(b)
t[names(t)==3]
mul2<-function(a,b){
t<-table(b)
q<-t[names(t)==3]
return(q)
}
mul2(2,c(2,2,2,2,2,2,5,6,7,2,2))
t<-table(b)
q<-t[names(t)==3]
q
mul2<-function(a,b){
t<-table(b)
q<-t[names(t)==3]
return(get(q,a))
}
mul2(2,c(2,2,2,2,2,2,5,6,7,2,2))
mul2<-function(a,b){
t<-table(b)
q<-t[names(t)==3]
return(as.integer(q))
}
mul2(2,c(2,2,2,2,2,2,5,6,7,2,2))
26/5
26%/%5
26-5*5
marks<-c(34,55)
stu<-c('xyz','aaa')
marks
marks<-c(34,55)
stu<-c('xyz','aaa')
marks
names(marks)<-stu
marks
marks[1]
marks[2]
marks['xyz']
F
as.integer(T)
as.integer("a")
