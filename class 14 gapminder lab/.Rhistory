print(paste("Hello ",name))
print(paste(name," Have a nice day"))
}
g<-greetname("AAA")
g
product<-function(a,b){
return(a*b)
}
product(2,2)
productq<-function(a,b){
return(a*b)
}
productq(1,2)
a=3
b=c(1,2,3,4,5)
a<-3
b<-c(1,2,3,4,5)
a in b
b==a
b[b==55]
a %in% b
help("is.element")
if(b==a){print("hello")}
any(b==a)
checkcontains <- function(a,b){
flag<-F
if(any(b==a)){
flag<-T
}
return(flag)
}
checkcontains(1,c(1,2,3))
b==a
d<-b==a
count(d[T])
a<-3
b<-c(1,2,3,3,3,5)
b==a
b[b==a]
count(b[b==a])
length(b[b==a])
checkcontains <- function(a,b = vector()){
flag<-F
if(any(b==a)){
flag<-T
}
return(flag)
}
checkcontains(a,a)
noofoccurances<-function(a,b = vector()){
return(length(b[b==a]))
}
noofoccurances(a,b)
shipaluminium<-function(kgs){
# big bars
bb<-kgs%%5
sb<-kgs-bb*5
shipment <- c(bb,sb)
colnames(shipment)<-c('Big','Small')
rownames(shipment)<-c('Bars')
return(shipment)
}
shipaluminium(13)
shipaluminium<-function(kgs){
# big bars
bb<-kgs%%5
sb<-kgs-bb*5
bars <- c(bb,sb)
rownames(bars)<-c('Big','Small')
return(bars)
}
shipaluminium(12)
shipaluminium<-function(kgs){
# big bars
bb<-kgs%%5
sb<-kgs-bb*5
bars <- c(bb,sb)
names(bars)<-c('Big','Small')
return(bars)
}
shipaluminium(12)
help("append")
help("break")
checkprime <- function(a){
flagprime<-F
end <- a/2
for (i in 1:end){
if(a%%i==0){
flagprime<-T
break
}
}
return(flagprime)
}
checkprime(1)
checkprime(44)
checkprime <- function(a){
flagprime<-F
end <- a/2
for (i in 1:end){
print("checking..")
if(a%%i==0){
flagprime<-T
}
}
return(flagprime)
}
checkprime(44)
checkprime(3)
checkprime(9)
checkprime <- function(a){
flagprime<-T
end <- a/2
for (i in 1:end){
print("checking..")
if(a%%i==0){
flagprime<-F
break
}
}
return(flagprime)
}
checkprime(33)
checkprime(31)
checkprime(3)
checkprime <- function(a){
flagprime<-T
end <- a/2
for (i in 2:end){
print("checking..")
if(a%%i==0){
flagprime<-F
break
}
}
return(flagprime)
}
checkprime(3)
checkprime(31)
checkprime(34)
help(append)
ff <- c(1,2)
append(ff,1,after = 1)
any(ff==1)
any(ff==2)
addnotthrees <- function(x,y,z){
result<-0
lv <- c(x,y,z)
lm <- lv[lv%%3 != 0]
result <- result + sum(lm)
return(result)
}
addnotthrees(1,2,3)
addnotthrees(3,2,3)
df<-mtcars
str(df)
summary(df)
dim(df)
summarise(df,avghp = mean(df$hp))
library('dplyr')
summarise(df,avghp = mean(df$hp))
summarise(df,avghp = mean(hp,na.rm = T))
summarise(group_by(df,cyl),avghp = mean(hp,na.rm = T))
count(df,cyl)
count(df,hp)
install.packages(data.table)
install.packages('data.table')
df
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9, min=0, max=100)
q2 <- runif(9, min=0, max=100)
q3 <- runif(9, min=0, max=100)
q4 <- runif(9, min=0, max=100)
df<-data.frame(comp = comp, year=yr, Qtr1 = q1, Qtr2 = q2, Qtr3 = q3, Qtr4 = q4)
df
gather(df, Quater, Revenue, Qtr1:Qtr4)
library('dplyr')
library('tidyr')
gather(df, Quater, Revenue, Qtr1:Qtr4)
stocks<-data.frame(as.Date('2009-01-01')+0:9)
stocks<-data.frame(as.Date('2009-01-01')+0:9,x=rnorm(10,0,1),y=rnorm(10,0,2),z=rnorm(10,0,4))
stocks
stocks<-data.frame(time = as.Date('2009-01-01')+0:9,x=rnorm(10,0,1),y=rnorm(10,0,2),z=rnorm(10,0,4))
stocks
stocks.gather<-stocks%>%gather(stock,price,-time)
stocks.gather
stocks.gather %>% spread(stocks,price)
stocks.gather %>% spread(stock,price)
df<-data.frame(x = c(NA, "a.x","b.y","c.z"))
df
df %>% seprate(x,c("ABC","XYZ"))
library('tidyr')
df %>% seprate(x,c("ABC","XYZ"))
df %>% separate(x,c("ABC","XYZ"))
df %>% separate(x,c("ABC","XYZ"),sep="_")
df<-data.frame(x = c(NA, "a_x","b_y","c_z"))
df %>% separate(x,c("ABC","XYZ"),sep="_")
unite(df,"ABC,XYZ")
unite(df,"ABC","XYZ")
unite(df.sep,newcol,ABC,XYZ)
unite(df,newcol,ABC,XYZ)
unite(df.sep,newcol,ABC,XYZ)
unite(df,newcol,ABC,XYZ)
df
df %>% separate(x,c("ABC","XYZ"),sep="_")
unite(df,newcol,ABC,XYZ)
df
df<-data.frame(x = c(NA, "a_x","b_y","c_z"))
df %>% separate(x,c("ABC","XYZ"),sep="_")
unite(df.sep,new.join.col,ABC,XYZ)
unite(df.sep,new.join.col,ABC,XYZ, sep="---")
df
df<-data.frame(x = c(NA, "a_x","b_y","c_z"))
df %>% separate(x,c("ABC","XYZ"),sep="_")
df
df<-data.frame(x = c(NA, "a_x","b_y","c_z"))
df.sep<-df %>% separate(x,c("ABC","XYZ"),sep="_")
unite(df.sep,new.join.col,ABC,XYZ)
unite(df.sep,new.join.col,ABC,XYZ, sep="---")
df<-data.frame(comp = comp, year=yr, Qtr1 = q1, Qtr2 = q2, Qtr3 = q3, Qtr4 = q4)
df
gather(df, Quater, Revenue, Qtr1:Qtr4)
stocks<-data.frame(time = as.Date('2009-01-01')+0:9,x=rnorm(10,0,1),y=rnorm(10,0,2),z=rnorm(10,0,4))
stocks
stocks.gather<-stocks%>%gather(stock,price,-time)
stocks.gather
stocks<-data.frame(time = as.Date('2009-01-01')+0:9,x=rnorm(10,0,1),y=rnorm(10,0,2),z=rnorm(10,0,4))
stocks
stocks.gather<-stocks%>%gather(stock,price,-time)
stocks.gather
stocks.gather %>% spread(stock,price)
ggplot(data = mtcars)
ggplot(aes(x=mpg,y=hp))
library(ggplot2)
ggplot(data = mtcars)
ggplot(aes(x=mpg,y=hp))
pl<-ggplot(data = mtcars,aes(x=mpg,y=hp)) + geom_point()
pl<-ggplot(data = mtcars,aes(x=mpg,y=hp)) + geom_point()
pl
pl2<-pl + facet_grid(cyl ~ .) + stat_smooth()
pl2
pl2 + coord_cartesian(c(15,25))
pl2 + coord_cartesian(xlim = c(15,25))
pl2 + coord_cartesian(xlim = c(15,25)) + xlab=papapa
pl2
pl2 + coord_cartesian(xlim = c(15,25)) + xlab="MILES"
pl2
pl<-ggplot(data = mtcars,aes(x=mpg,y=hp), xlab="MILES") + geom_point()
pl2<-pl + facet_grid(cyl ~ .) + stat_smooth()
pl2 + coord_cartesian(xlim = c(15,25))
pl2
pl<-ggplot(data = mtcars,aes(x=mpg,y=hp), xlab="MILES") + geom_point()
pl<-ggplot(data = mtcars,aes(x=mpg,y=hp), xlab="MILES") + geom_point()
pl2<-pl + facet_grid(cyl ~ .) + stat_smooth()
pl3<-pl2 + coord_cartesian(xlim = c(15,25))
pl3
pl<-ggplot(data = mtcars,aes(x=mpg,y=hp), xlab="MILES") + geom_point()
pl
pl3<-pl2 + coord_cartesian(xlim = c(15,25)) + theme_bw()
pl3
pl3<-pl2 + coord_cartesian(xlim = c(15,25))+xlab("MILES")
pl3
install.packages("ggplot2movies")
install.packages("ggplot2theme")
install.packages("ggplotthemes")
install.packages("ggplot2themes")
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
df <- movies[sample(nrow(movies), 1000), ]
head(df)
qplot(rating, data = df, geom = 'histogram', binwidth=0.1, alpha =
0.8)
pl <- ggplot(df, aes(x=rating))
pl + geom_histogram()
pl <- ggplot(df, aes(x=rating))
pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink')
pl <- ggplot(df, aes(x=rating))
pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink',
alpha = 0.4)
pl <- ggplot(df, aes(x=rating))
pl + geom_histogram(binwidth = 0.1, color='red', fill='pink') +
xlab('Movie Ratings') + ylab('Occurrences') + ggtitle('Movie
Ratings')
pl <- ggplot(df, aes(x=rating))
pl + geom_histogram(binwidth = 0.1, fill = 'blue', alpha = 0.4) +
xlab('Movie Ratings') + ylab('Occurrences')
pl <- ggplot(df,aes(x=rating))
pl + geom_histogram(binwidth=0.1,aes(fill=..count..)) + xlab('Movie
Ratings')+ ylab('Occurences')
income
Income
help('lm')
# Genera Form Linear Regression
# model <- lm(y ~ x1 + x2, data)
# Use all deatures in data
# model <- lm(y ~. , data)
# Splitting Training and tesing data
df <- read.csv('student-mat.csv',sep = ';')
library(caTools)
library(ggplot2)
set.seed(101)
# Actual Splitting
sample <- sample.split(df$age, SplitRatio = 0.70)
train = subset(df, sample == T)
test = subset(df, sample == F)
model <- lm(G3 ~ .,train)
summary(model)
# Visualize Model
res <- residuals(model)
# Convert to DataFrame for ggplot
res <- as.data.frame(res)
head(res)
ggplot(res,aes(res))
plot(model)
# Genera Form Linear Regression
# model <- lm(y ~ x1 + x2, data)
# Use all deatures in data
# model <- lm(y ~. , data)
# Splitting Training and tesing data
df <- read.csv('/media/aditya/APPS/MS BDA I SEM/Computing For Data Science/R/class 10 Student Data Regressionstudent-mat.csv',sep = ';')
library(caTools)
library(ggplot2)
set.seed(101)
# Actual Splitting
sample <- sample.split(df$age, SplitRatio = 0.70)
train = subset(df, sample == T)
test = subset(df, sample == F)
model <- lm(G3 ~ .,train)
summary(model)
# Visualize Model
res <- residuals(model)
# Convert to DataFrame for ggplot
res <- as.data.frame(res)
head(res)
ggplot(res,aes(res))
plot(model)
# Genera Form Linear Regression
# model <- lm(y ~ x1 + x2, data)
# Use all deatures in data
# model <- lm(y ~. , data)
# Splitting Training and tesing data
library(ggplot2)
library(ggthemes)
library(dplyr)
df <- read.csv('/media/aditya/APPS/MS BDA I SEM/Computing For Data Science/R/class 10 Student Data Regressionstudent-mat.csv',sep = ';')
library(caTools)
set.seed(101)
# Actual Splitting
sample <- sample.split(df$age, SplitRatio = 0.70)
train = subset(df, sample == T)
test = subset(df, sample == F)
model <- lm(G3 ~ .,train)
summary(model)
# Visualize Model
res <- residuals(model)
# Convert to DataFrame for ggplot
res <- as.data.frame(res)
head(res)
ggplot(res,aes(res))
plot(model)
df
# Genera Form Linear Regression
# model <- lm(y ~ x1 + x2, data)
# Use all deatures in data
# model <- lm(y ~. , data)
# Splitting Training and tesing data
library(ggplot2)
library(ggthemes)
library(dplyr)
df <- read.csv('/media/aditya/APPS/MS BDA I SEM/Computing For Data Science/R/class 10 Student Data Regression/student-mat.csv',sep = ';')
library(caTools)
set.seed(101)
# Actual Splitting
sample <- sample.split(df$age, SplitRatio = 0.70)
train = subset(df, sample == T)
test = subset(df, sample == F)
model <- lm(G3 ~ .,train)
summary(model)
# Visualize Model
res <- residuals(model)
# Convert to DataFrame for ggplot
res <- as.data.frame(res)
head(res)
ggplot(res,aes(res))
plot(model)
library(swirl)
swirl()
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = F)
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran, r_arch:country)
select(country:r_arch)
select(cran,country:r_arch)
cran
select(cran,-time)
select(cran,-5:20)
-5:20
-(5:20)
select(cran,-(r_cran:))
select(cran,-r_cran:)
select(cran,-(r_cran:))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran,r_version == "3.1.1",country = "US")
filter(cran,r_version == "3.1.1",country == "US")
?Comparison
filter(cran, country == "IN", r_version >= "3.0.1")
filter(cran, country == "IN", r_version <= "3.0.1")
filter(cran, country == "IN", r_version <= "3.0.2")
filter(cran,country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,"o"))
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran,ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,country,desc(r_version),ip_id)
select(cran,ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_mb = size/2^20, size_gb = size_mb / 2^10)
mutate(cran,correct_size = size + 1000)
mutate(cran3,correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
swirl()
install.packages("UsingR")
setwd("/media/aditya/APPS/MS BDA I SEM/Computing For Data Science/R/class 14 gapminder lab")
x<-unlist(read.csv("femaleControlsPopulation.csv"))
x
set.seed(1)
means<-c()
for(i in 1:1000){
means<-c(means,mean(sample(x,5)))
}
means
set.seed(1)
meanz<-c()
for(i in 1:1000){
meanz<-c(meanz,mean(sample(x,50)))
}
meanz
hist(means,probability = T)
curve(dnorm(x, 23.9, 0.43), add = T)
hist(meanz,probability = T)
curve(dnorm(x, 23.9, 0.43), add = T)
length(meanz[meanz <= 25 & meanz >= 23])/length(meanz)
library(ggplot2)
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', aes(y=..density.., fill = ..count..), fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
library(ggplot2)
library(data.table)
setwd("/media/aditya/APPS/MS BDA I SEM/Computing For Data Science/R/class 14 gapminder lab")
x<-fread("femaleControlsPopulation.csv")
head(x)
x$Bodyweight
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', aes(y=..density.., fill = ..count..), fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
x
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x$Bodyweight), sd = sd(x$Bodyweight)),color = '#FFEB3B')
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
library(ggplot2)
library(data.table)
setwd("/media/aditya/APPS/MS BDA I SEM/Computing For Data Science/R/class 14 gapminder lab")
x<-fread("femaleControlsPopulation.csv")
head(x)
x$Bodyweight
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
x<-unlist(x)
ggplot(x,aes(x = Bodyweight)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
ggplot(as.data.frame(x),aes(x = Bodyweight)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
ggplot(as.data.frame(x),aes(x = x)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
ggplot(as.data.frame(x),aes(x = x)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
library(ggplot2)
library(data.table)
setwd("/media/aditya/APPS/MS BDA I SEM/Computing For Data Science/R/class 14 gapminder lab")
x<-fread("femaleControlsPopulation.csv")
head(x)
x$Bodyweight
x<-unlist(x)
ggplot(as.data.frame(x),aes(x = x)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm,args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
mean(x)
sd(x)
means
ggplot(data = means,aes(x = means)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm, args = list(mean = mean(means), sd = sd(means)))
ggplot(data = as.data.frame(means),aes(x = means)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm, args = list(mean = mean(means), sd = sd(means)))
ggplot(data = as.data.frame(means),aes(x = means)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm, args = list(mean = mean(means), sd = sd(means),color = '#FFEB3B'))
ggplot(data = as.data.frame(means),aes(x = means)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm, args = list(mean = mean(means), sd = sd(means)),color = '#FFEB3B')
x
ggplot(data = as.data.frame(means),aes(x = means)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm, args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
ggplot(data = as.data.frame(means),aes(x = means)) + geom_histogram(color = 'black', fill = '#2196F3') + stat_function(fun = dnorm, args = list(mean = mean(x), sd = sd(x)),color = '#FFEB3B')
hist(meanz,probability = T)
curve(dnorm(x, 23.9, 0.43), add = T)
hist(means,probability = T)
curve(dnorm(x, 23.9, 0.43), add = T)
